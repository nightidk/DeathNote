plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
	id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
	id 'architectury-plugin' version '3.4-SNAPSHOT'
	id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

apply plugin: 'dev.architectury.loom'
apply plugin: 'architectury-plugin'

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

architectury {
	minecraft = project.minecraft_version
}

repositories {
	maven { url "https://maven.ladysnake.org/releases" }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.nucleoid.xyz" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation include("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}")


	modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")

	compileOnly 'org.projectlombok:lombok:1.18.32'

	annotationProcessor 'org.projectlombok:lombok:1.18.32'

	modRuntimeOnly "me.lucko:fabric-permissions-api:${project.fabric_permissions_version}"


	include 'com.github.cliftonlabs:json-simple:4.0.1'
	include implementation("net.dv8tion:JDA:${project.jda_version}")  {
		exclude module: "opus-java"
	}
	include 'org.json:json:20240303'
	include 'com.squareup.okio:okio:3.5.0'
	include 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'
	include 'com.squareup.okio:okio-jvm:3.5.0'
	include "org.apache.commons:commons-collections4:4.4"
	include "org.jetbrains.kotlin:kotlin-stdlib:1.6.21"
	include "com.neovisionaries:nv-websocket-client:2.14"
	include "net.sf.trove4j:trove4j:3.0.3"
	include 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
	include "com.fasterxml.jackson.core:jackson-annotations:2.13.1"
	include "com.fasterxml.jackson.core:jackson-core:2.13.1"
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

//shadowJar {
//	archiveClassifier = "${project.minecraft_version}"
//	configurations = [project.configurations.embed]
//	relocate 'org.slf4j', 'dcshadow.org.slf4j'
//}


publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {}
}

configurations.configureEach {
	resolutionStrategy {
		force("net.fabricmc:fabric-loader:${project.loader_version}")
	}
}